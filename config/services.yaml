parameters:
    app.from_email: 'no-reply@ma-salle.com'
    app.display_name: 'Ma Salle'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $fromEmail: '%app.from_email%'
            $displayName: '%app.display_name%'

    App\Infrastructure\:
        resource: '../src/Infrastructure'
        exclude: '../src/Infrastructure/{Test}'

    App\UserInterface\:
        resource: '../src/UserInterface'

    TYannis\SDS\Domain\:
        resource: '../domain/src'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\UserInterface\Controller\:
        resource: '../src/UserInterface/Controller'
        tags: ['controller.service_arguments']

    App\Infrastructure\EventListener\ExceptionListener:
        tags:
            - { name: kernel.event_listener, event: kernel.exception }